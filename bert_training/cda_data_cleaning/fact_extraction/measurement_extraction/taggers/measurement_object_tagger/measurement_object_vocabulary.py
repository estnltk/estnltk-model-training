vocabulary = [
    {
        "grammar_symbol": "MO",
        "regex_type": "KOLESTEROOL",
        "_regex_pattern_": "((K|k)olesteroo?l|KOLESTEROOL|(K|k)olester|Chol|(K|k)olest?|kol|chol|CHol|CHL|KOL|Kol|cHOL|CHOL|ÜK|ük|Ük)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "kolesterool",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "PULSS",
        "_regex_pattern_": "(((S|s)iinus)?r.tm(iline|ilised)?|[Ff]rekv?(ents)?|fr\.?|Fr|BPM|bpm|SR|SLS|FR|HR|(P|p)ulss(i)?|Ps)(\s*[xX]\s*)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "pulss",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "PIKKUS",
        "_regex_pattern_": "([Pp]ikkusega|[Pp]ikkus|PIKKUS|SP|sp|pikk|kasv|Kasv)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "pikkus",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "PSA",
        "_regex_pattern_": "(psa|Psa|S-PSA|[Pp]rostataspetsiifiline\s*antigeen(\s*seerumis)?|PSA|(S,P-)?(PSA))",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "psa",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KAAL",
        "_regex_pattern_": "((((K|k)eha)|((S|s)ünni))?(K|k)aal(uga)?|kAAL|SK|Sk|[^a-züõöä]sk|KAAL|SM|[Ss]/k|(K|k)aalu(ga|nud|b|s))",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "kaal",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KAALULANGUS",
        "_regex_pattern_": "([Kk]aal.{,30}(alla|maha|lang|kaot|vähene|alane).{,30})",
        "_group_": 0,
        "_priority_": -2,
        "_validator_": lambda m: True,
        "value": "kaalulangus",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KAALUTÕUS",
        "_regex_pattern_": "([Kk]aal.{,30}(juurde|juures|üles|tõus|suure|\+).{,30})",
        "_group_": 0,
        "_priority_": -2,
        "_validator_": lambda m: True,
        "value": "kaalutõus",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "ALAT",
        "_regex_pattern_": "ALA?T",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "alat",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "ASAP",
        "_regex_pattern_": "(A[SL]A?P|[Aa]luseline\s*fosfataas)\s?(paastuseerumis|seerumis/plasmas|seerumis|uriinis|plasmas|püsib)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "alat",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KMI",
        "_regex_pattern_": "(KMI|kmi|BMI|bmi|Bmi|BMi|KmI|BmI|kmI|bmI|KMi)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "bmi",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "VERERÕHK",
        "_regex_pattern_": "(AVR|RR|BP|rr|VR|V/R|(V|v)ererõhk|süs/dia)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "vererõhk",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "VABA_PSA",
        "_regex_pattern_": "((([Ff]|[Vv]aba|VABA)[-_ ]*PSA)|(v\.PSA))",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "vabapsa",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "GLÜKOOS",
        "_regex_pattern_": "(([Vv]ere)?suhkur|VERESUHKUR|VS|vs|[Gg]lükoos|glukoo?s|GLÜKOOS|GLUC|[Gg]lyc|[Gg]lüc|gly|GLY|[Gg]luc\.?)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "veresuhkur",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "HEMOGLOBIIN",
        "_regex_pattern_": "([Hh]emoglobiin|Hgb|HGb|hgb|HGB|Hb|hb|HB|hGB)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "hemoglobiin",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KREATINIIN",
        "_regex_pattern_": "([Kkc]reat(\s*\.)?|[Kk]reatin|[Kk]reatinii?n|(S-)?[Cc]rea|[Kk]rea|CREA|cREA)\s?(paastuseerumis|seerumis/plasmas|seerumis|uriinis|plasmas|püsib)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "kreatiniin",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "GLÜKOHEMOGLOBIIN",
        "_regex_pattern_": "((glüko?|glük\.|glükeeritud|glükolüseeritud)\s*([Hh]gb|hemoglobiin)|[Gg]lüko?hemoglobiin|(B-)?HG?BA1\s*C|(B-)?Hg?bA1\s*c|(B-)?Hg?bA1\s*C|Hba1c|HBA1c|Hba1C|HBa1c|Hgb1ac|hgba1c|HB1ac|HgBa1C)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "glükohemoglobiin",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "VÖÖÜMBERMÕÕT",
        "_regex_pattern_": "([Tt]alje(\s*suurus)?|vüm?|VÜM?|Vüm?|vÜM?|[Vv]ööümbermõõt|[Vv]ööümb?|[Vv]ööümberm?)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "vööümbermõõt",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "TRIGLÜTSERIIDID",
        "_regex_pattern_": "([Tt]riglütseriidid|[Tt]rigl)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "triglütseriidid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "BASOFIILID",
        "_regex_pattern_": "(BASOFIILI?[EDA]|[Bb]asofiili?[eda]|[Bb]asof?|BASOF?)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "basofiilid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "EOSINOFIILID",
        "_regex_pattern_": "(EOSINOFIILI?[EDA]|[Ee]osinofiili?[eda]|[Ee]osinof?|EOSINOF?|B-EO|EO|[Ee]os\.)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "eosinofiilid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "NEUTROFIILID",
        "_regex_pattern_": "(NEUTROFIILI?[DAE]|[Nn]eutrofiili?[eda]|[Nn]eutropeenia(ga)?|[Nn]eutrof?|NEUTROF?|B-NEUT|NEUTR?|neutr?)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "neutrofiilid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "APGAR",
        "_regex_pattern_": "([Aa]pgar(iga)?|[Ss]ünnihinne|APGAR|[Aa]pgari?\s*hinne)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "apgar",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "LEUKOTSÜÜDID",
        "_regex_pattern_": "([Ll]eukots..did|LEUKOTS..DID|[Ll]eukotsüütide\s*arv|[Ll]eukotsüüte|[Ll]eukotsütoos|[Ll]eukopeenia|WBC|[Ww]bc|[Ll]eukot?s?|LEUKOT?S?)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "leukotsüüdid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "ERÜTROTSÜÜDID",
        "_regex_pattern_": "([Ee]r.trots..[dt](id)?e?|ER.TROTS..[DT](ID)?E?|[Ee]r.trots|ER.TROTS|RBC|rbc)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "erütrotsüüdid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "MONOTSÜÜDID",
        "_regex_pattern_": "([Mm]onots..[dt]id()?e?|MONOTS..[TD](ID)?E?|MONOT?S?|[Mm]onot?s?|[Mm]onocyte)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "monotsüüdid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "LÜMFOTSÜÜDID",
        "_regex_pattern_": "([Ll].mfots..[dt](id)?e?|L.MFOTS..[TD](ID)?E?|L.MFOT?S?|[Ll].mfot?s?|LYMPH|[Ll]ymph|LÜMF|[Ll]ümf)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "lümfotsüüdid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "TROMBOTSÜÜDID",
        "_regex_pattern_": "([Tt]rombots..[dt](id)?e?|TROMBOTS..[DT](ID)?E?|[Tt]rombot?s?|TROMBOT?S?|PLT|[Pp]lt|[Tt]rombotsütopeenia)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "trombotsüüdid",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "HEMATOKRIT",
        "_regex_pattern_": "([Hh]emato[ck]r?i?t?t?|[Hh]ct|HCT)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "hematokrit",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "MCH",
        "_regex_pattern_": "([Kk]eskmine\s*hemoglobiini\s*hulk\s*erütrot[a-z.]{,7}|[Mm]ch|MCH)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "mch",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "MCHC",
        "_regex_pattern_": "([Kk]eskmine\s*hemoglobiini\s*kontsentrat[a-z.]{,7}|[Mm]chc|MCHC)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "mchc",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "MCV",
        "_regex_pattern_": "(([Ee]r.trots..[dt](id)?e?|ER.TROTS..[DT](ID)?E?|[Ee]r.trots|ER.TROTS|RBC|rbc)\s*keskmine\s*(maht|ruumala)|[Mm]cv|MCV)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "mcv",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "MPV",
        "_regex_pattern_": "(([Tt]rombots..[dt](id)?e?|TROMBOTS..[DT](ID)?E?|[Tt]rombot?s?|TROMBOT?S?|PLT|[Pp]lt|[Tt]rombotsütopeenia)\s*keskmine\s*(maht|ruumala)|[Mm]pv|MPV)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "mpv",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "TROMBOKRIT",
        "_regex_pattern_": "([Tt]rombo[ck]r?i?t?t?|[Pp]ct|PCT)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "trombokrit",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "PDW",
        "_regex_pattern_": "([Pp]dw|PDW)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "pdw",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "RDW-SD",
        "_regex_pattern_": "([Rr]dw.?sd|RDW.?SD)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "rdw-sd",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "CRP",
        "_regex_pattern_": "([Cc]rp|CRP|C-reaktiivne\s*valk[) ]*)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "crp",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "HDL-KOLESTEROOL",
        "_regex_pattern_": "(HDL|hdl|Hdl|HDl)\s*\-?=?((K|k)olesteroo?l|KOLESTEROOL|(K|k)olester|Chol|(K|k)olest?|kol|chol|CHol|CHL|KOL|Kol|cHOL|CHOL|ÜK|ük|Ük)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "hdl-kolesterool",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "LDL-KOLESTEROOL",
        "_regex_pattern_": "(LDL|ldl|Ldl|LDl)\s*\-?=?((K|k)olesteroo?l|KOLESTEROOL|(K|k)olester|Chol|(K|k)olest?|kol|chol|CHol|CHL|KOL|Kol|cHOL|CHOL|ÜK|ük|Ük)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "ldl-kolesterool",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "ASAT",
        "_regex_pattern_": "(ASA?T|[Aa]spartaam\s*transaminaas)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "asat",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KUSIHAPE",
        "_regex_pattern_": "([Kk]usihape|UA)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "kusihape",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "TESTOSTEROON",
        "_regex_pattern_": "[Tt]esto(steroon)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "testosteroon",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "BILIRUBIIN",
        "_regex_pattern_": "([Bb]ilirubii?n|[Bb]il|BIL|[Bb]ilir(ub)?)\s?(paastuseerumis|seerumis/plasmas|seerumis|uriinis|plasmas|püsib|üldine|üld)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "bilirubiin",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "INR",
        "_regex_pattern_": "(INR|Inr)\s?(sõr?mest)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "inr",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "KREATIINKINAAS",
        "_regex_pattern_": "((S-)?CK|KREATIINI?\s?KINAAS|[Kk]reatiini?\s?kinaas|[Kk]reatiniini?\s?kinaas|KREATINIINI?\s?KINAAS)\s?(paastuseerumis|seerumis/plasmas|seerumis|uriinis|plasmas|püsib)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "inr",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "IPSS",
        "_regex_pattern_": " (IPSS|Ipss|ipss)",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "ipss",
    },
    {
        "grammar_symbol": "MO",
        "regex_type": "IMMUUNGLOBULIIN_E",
        "_regex_pattern_": "((([Üü]ld|S)[- ]*)?IgE|[Ii]mmuunglobuliin\s?E)\s*(paastuseerumis|seerumis/plasmas|seerumis|uriinis|plasmas|püsib)?",
        "_group_": 0,
        "_priority_": -1,
        "_validator_": lambda m: True,
        "value": "immuunglobuliin_e",
    },
]
