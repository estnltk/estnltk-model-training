SET ROLE {role};
-- requires existence of table classifications.drug_packages

drop function if exists {schema}.clean_active_ingredient_entry(active_ingredient_raw text, drug_code text);
create or replace function {schema}.clean_active_ingredient_entry(active_ingredient_raw text, drug_code text)
-- drug_code needed for filling in '�' and '_'
    returns text[]
as
$body$
declare
    dose_regex         varchar := '[0-9]+[\.,]?[0-9]*\s*'; -- e.g. 1,0 or 20 or 10.01
    dose_extra_regex   varchar := format('(%s(mg|mcg|mg tablett)\s*(%s(ml|g))?)', dose_regex, dose_regex);
    dose_extra         varchar := NULL; -- dose that has accidentally been placed under active_ingredient

    active_ingredient  varchar := NULL;
    package_size_regex varchar := '[Nn][0-9]+';
    package_size       varchar := NULL; -- package size (e.g. n20) that has accidentally been placed under active_ingredient
begin
    if active_ingredient_raw is not null and active_ingredient_raw != '' then

        -- removes repeating white spaces
        active_ingredient := lower(trim(regexp_replace(active_ingredient_raw, '\s+', ' ', 'g')));

        -- changes numbers to correct charachters
        if active_ingredient ~ '&#252;|&#246;' then
            active_ingredient := regexp_replace(active_ingredient, '&#252;', 'ü', 'g');
            active_ingredient := regexp_replace(active_ingredient, '&#246;', 'ö', 'g');
        end if;

        -- subsitute '_' and '�' using drug_packages from classification schema
        -- amitript_liin -> amitriptüliin
        -- amitript�liin -> amitriptüliin
        if active_ingredient ~ '[_�]' then
            select distinct dp.active_subtance
            into active_ingredient
            from classifications.drug_packages as dp
            where dp.atc_code = drug_code;
        end if;
        -- ingredient name ends with number and mg or mcg or ml then split it
        -- e.g. cardace 2,5 mg tablett -> active_ingredient = cardace, dose_extra = 2,5 mg tablett
        --      arava 20 mg -> active_ingredient = araca, dose_extra= null
        --      naatriumlevotüroksiin 50.0 mcg -> active_ingredient = naatriumlevotüroksiin, dose_extra= 50.0 mcg
        --      deksametasoon 1,0 mg 1,0 ml -> active_ingredient = deksametasoon, dose_extra= 1,0 mg 1,0 ml
        if active_ingredient ~ dose_extra_regex then
            dose_extra := (regexp_matches(active_ingredient, dose_extra_regex))[1];
            active_ingredient := regexp_replace(active_ingredient, dose_extra_regex, '');
        end if;

        -- ingredient includes package size e.g. n120, n20 etc
        if active_ingredient ~ package_size_regex then
            package_size := (regexp_matches(active_ingredient, package_size_regex))[1];
            active_ingredient := regexp_replace(active_ingredient, package_size_regex, '');
        end if;

        return array [lower(trim(active_ingredient)), trim(dose_extra), trim(package_size)];
    end if;

    return array [NULL, NULL, NULL];
end
$body$
    language plpgsql;

reset role;
