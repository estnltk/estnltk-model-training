-- NB! parameter_names must be without õ,ä,ö,ü


DO $$
begin
raise notice 'Parameter_name to loinc mapping has rows:';
end;
$$;

-------------------------------------------------------------------------------------------------------
-- Import data from predefined csv files
-------------------------------------------------------------------------------------------------------
set role :role;

drop table if exists :schema.latest_manual_cases;
create table :schema.latest_manual_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);
set search_path to :schema;
\copy latest_manual_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_manual_cases.csv' with (delimiter ',', format csv, header);


drop table if exists :schema.latest_name_cases;
create table :schema.latest_name_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_name_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_name_cases.csv' with (delimiter ',', format csv, header);

drop table if exists :schema.latest_parentheses_one_cases;
create table :schema.latest_parentheses_one_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_parentheses_one_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_parentheses_one_cases.csv' with (delimiter ',', format csv, header);

drop table if exists :schema.latest_parentheses_two_cases;
create table :schema.latest_parentheses_two_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);
set search_path to :schema;
\copy latest_parentheses_two_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_parentheses_two_cases.csv' with (delimiter ',', format csv, header);


drop table if exists :schema.latest_parentheses_three_cases;
create table :schema.latest_parentheses_three_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_parentheses_three_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_parentheses_three_cases.csv' with (delimiter ',', format csv, header);

drop table if exists :schema.latest_prefix_cases;
create table :schema.latest_prefix_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_prefix_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_prefix_cases.csv' with (delimiter ',', format csv, header);

drop table if exists :schema.latest_semimanual_cases;
create table :schema.latest_semimanual_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_semimanual_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_semimanual_cases.csv' with (delimiter ',', format csv, header);


drop table if exists :schema.latest_completely_manual_cases;
create table :schema.latest_completely_manual_cases
(
	dirty_code text,
	"loinc_code(T-luhend)" text
);

set search_path to :schema;
\copy latest_completely_manual_cases from 'create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/predefined_mapping_csvs/latest_completely_manual_cases.csv' with (delimiter ',', format csv, header);


-------------------------------------------------------------------------------------------------------
-- Create parameter_name  mapping to loinc code
-------------------------------------------------------------------------------------------------------


drop table if exists :schema.parameter_name_to_loinc_mapping;
create table :schema.parameter_name_to_loinc_mapping (
  parameter_name varchar,
  t_lyhend varchar,
  loinc_code varchar,
  substrate varchar,
  evidence varchar
);

reset role;


-- filling parameter_name and t_lyhend
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_name_cases' from :schema.latest_name_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)",  'latest_parentheses_one_cases' from :schema.latest_parentheses_one_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend,evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_parentheses_two_cases' from :schema.latest_parentheses_two_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_parentheses_three_cases' from :schema.latest_parentheses_three_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_semimanual_cases' from :schema.latest_semimanual_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_prefix_cases' from :schema.latest_prefix_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_manual_cases' from :schema.latest_manual_cases;
insert into :schema.parameter_name_to_loinc_mapping (parameter_name, t_lyhend, evidence)
  select dirty_code, "loinc_code(T-luhend)", 'latest_completely_manual_cases' from :schema.latest_completely_manual_cases;

reset role;



-------------------------------------------------------------------------------------------------------
-- finding corresponding loinc_code and substrate
-------------------------------------------------------------------------------------------------------
update :schema.parameter_name_to_loinc_mapping as p
set loinc_code = e.loinc_no,
    substrate  = e.system
from classifications.elabor_analysis as e
where upper(e.t_lyhend) = upper(p.t_lyhend);



-------------------------------------------------------------------------------------------------------
-- Do not know, if some substrates belong to urine or blood
-- Therefore the CASE ... WHEN ... statement can be improved
-------------------------------------------------------------------------------------------------------
update :schema.parameter_name_to_loinc_mapping
set substrate = case
                    when substrate in
                         ('Ser', 'Bld/Tiss', 'Bld.dot', 'RBC', 'Plas', 'BldA', 'BldC', 'BldMV', 'BldV', 'BldCo',
                          'BldCoV', 'BldCoA', 'Bld^newborn', 'Ser+Bld', 'BldA+Inhl gas', 'Bld/Bone mar', 'BldA+BldMV',
                          'Bld.pos growth', 'BldA+Resp.alv')
                        then 'Bld'
                    when substrate in ('Stool', 'Urine sed') then 'Urine'
                    when substrate in
                         ('Periton fld+Ser/Plas', 'Ser/Plas+Plr fld', 'Ser/Plas.maternal^fetus', 'Ser/Plas+Synv fld',
                          'Ser+Plas') then 'Ser/Plas'
                    when substrate in ('XXX','') then NULL
                    else substrate
    end;

-- fully manual mapping, do not know estonian t_lyhend
insert into :schema.parameter_name_to_loinc_mapping (
  parameter_name,
  t_lyhend,
  loinc_code,
  substrate,
  evidence)
VALUES ('U-Cla Läbipaistvus',NULL,'32167-9','Urine','manual'),
	('Cla Läbipaistvus',NULL,'32167-9','Urine','manual'),
	('U-Col Värvus', NULL,'5778-6','Urine','manual'),
	('Col Värvus', NULL,'5778-6','Urine','manual'),
	('U-Ket Ketokehad', NULL, '50557-8', 'Urine', 'manual'),
	('aB-K','aB-K', '32713-0', 'Bld', 'manual'),
	('aB-Na','aB-Na', '32717-1', 'Bld', 'manual'),
	('aP-K','aP-K',  '2823-3', 'Ser/Plas', 'manual'),
	('aP-Na','aP-Na', '2951-2', 'Ser/Plas', 'manual'),
	('aP-Lac', 'aP-Lac', '32132-3', 'Ser/Plas', 'manual');

set search_path to :schema;
\copy (select distinct on (parameter_name, t_lyhend, loinc_code, substrate) parameter_name, t_lyhend, loinc_code, substrate, evidence from parameter_name_to_loinc_mapping where loinc_code is not null) to 'create_csvs_for_loinc_code_assignment/results/parameter_name_to_loinc_mapping.csv' With (delimiter ',', format csv, header)

-- jooksuatmine
-- psql --host="$host" --dbname="$dbname" --file=create_csvs_for_loinc_code_assignment/parameter_name_mapping_to_loinc_code/create_predefined_csvs_parameter_name_to_loinc_mapping.psql -v role="$role" -v schema=$schema 2>&1 | tee
