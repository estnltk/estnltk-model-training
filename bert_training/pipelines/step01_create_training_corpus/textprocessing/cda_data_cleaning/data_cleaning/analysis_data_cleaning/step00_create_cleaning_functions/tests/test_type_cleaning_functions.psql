-----------------------------------------------------------------------------------
--PG TAP
-----------------------------------------------------------------------------------

SET search_path TO :schemaname, util;
SHOW search_path;

-- should turn off echo and keep things quiet.
\unset ECHO
\set QUIET 1

BEGIN;

SELECT * FROM no_plan();

--SELECT has_function('analysiscleaning', 'clean_floats');

-- REMOVE_UNITS
select is(analysiscleaning.remove_units('9.8 10g/l', TRUE), '9.8', 'Test 1 remove_units: Removes unit when strict = True');
select is(analysiscleaning.remove_units(' 9.8 10g/l ', TRUE), '9.8','Test 2 remove_units: Removes unit with extra whitespaces');
select is(analysiscleaning.remove_units('9.810g/l', TRUE), '9.810g/l', 'Test 3 remove_units: Does not remove unit when strict = True');
select is(analysiscleaning.remove_units('9.810g/l', FALSE), '9.8', 'Test 4 remove_units: Removes unit when strict = False');

-- CLEAN_FLOATS
select is(analysiscleaning.clean_floats('.'), '0.0', 'Test 5 clean_floats: Adds zeros before and after dot');
select is(analysiscleaning.clean_floats('.8'), '0.8', 'Test 6 clean_floats: Add zero before dot');
select is(analysiscleaning.clean_floats('8.'), '8.0', 'Test 7 clean_floats: Add zero after dot');
select is(analysiscleaning.clean_floats('-.8'), '-0.8', 'Test 8 clean_floats: Add zero before dot with minus sign');
select is(analysiscleaning.clean_floats('-8.'), '-8.0', 'Test 9 clean_floats: Add zero after dot with minus sign');
select is(analysiscleaning.clean_floats('+.8'), '0.8', 'Test 10 clean_floats: Remove plus sign from beginning 1');
select is(analysiscleaning.clean_floats('+8.'), '8.0', 'Test 11 clean_floats: Remove plus sign from beginning 2');
select is(analysiscleaning.clean_floats('+-8.'), '8.0', 'Test 12 clean_floats: Remove all signs');

--MATCH_FLOAT
select ok(analysiscleaning.match_float('2.3aa') = FALSE, 'Test 13 match_float: Not float');
select ok(analysiscleaning.match_float('2.3') = TRUE, 'Test 14 match_float: Is float');
select ok(analysiscleaning.match_float('2') = FALSE, 'Test 15 match_float: Is integer, not float');

--IS_FLOAT
select ok(analysiscleaning.is_float('4,5') = TRUE, 'Test 16 is_float: Number with comma is float');
select ok(analysiscleaning.is_float('4.5') = TRUE, 'Test 17 is_float: Number with dot is float');
select ok(analysiscleaning.is_float('4.5a') = FALSE, 'Test 18 is_float: Number with text is not float 1' );
select ok(analysiscleaning.is_float('a4.5') = FALSE,'Test 19 is_float: Number with text is not float 1');
select ok(analysiscleaning.is_float('-4.5') = TRUE, 'Test 20 is_float: Number with minus is float');
select ok(analysiscleaning.is_float('+4.5') = TRUE, 'Test 21 is_float: Number with plus is float');
select ok(analysiscleaning.is_float('4.5 10g/l') = TRUE, 'Test 22 is_float: Number with unit is float');
select ok(analysiscleaning.is_float('4.510g/l') = FALSE, 'Test 23 is_float: Number and unit written together is not floast');
-- If strict changed to false, then number+unit will be considered flaot
select ok(analysiscleaning.is_float('4 10g/l') = FALSE, 'Test 24 is_float: Integer with unit is not float');

--CLEAN_INTEGER
select is(analysiscleaning.clean_integer('4'), '4', 'Test 25 clean_integer: Already clean integer stays same');
select is(analysiscleaning.clean_integer('-4'), '-4', 'Test 26 clean_integer: Integer with minus sign stays same');
select is(analysiscleaning.clean_integer('+4'), '4', 'Test 27 clean_integer: Plus sign is removed from the beginning');
select is(analysiscleaning.clean_integer('+-4'), '4', 'Test 28 clean_integer: Plus and minus together in the beginnig are removed');
select is(analysiscleaning.clean_integer('-+4'), '-4', 'Test 29 clean_integer: If minus and plus together in the beginnig, plus is removed');
select is(analysiscleaning.clean_integer(' 4'), '4', 'Test 30 clean_integer: Remove whitespace from beginning');
select is(analysiscleaning.clean_integer('4 '), '4', 'Test 31 clean_integer: Remove whitespace from end');
select is(analysiscleaning.clean_integer('  4 '), '4', 'Test 32 clean_integer: Remove whitespace both beginning and end');

--MATCH_INTEGER
select ok(analysiscleaning.match_integer('4') = TRUE, 'Test 33 match_integer: Is integer');
select ok(analysiscleaning.match_integer('4.5') = FALSE, 'Test 34 match_integer: Float is not integer 1');
select ok(analysiscleaning.match_integer('4,5') = FALSE, 'Test 35 match_integer: Float is not integer 2');
select ok(analysiscleaning.match_integer('4a') = FALSE, 'Test 36 match_integer: Text+integer is not integer 1');
select ok(analysiscleaning.match_integer('a4') = FALSE, 'Test 37 match_integer: Text+integer is not integer 2');
select ok(analysiscleaning.match_integer('-4') = TRUE, 'Test 38 match_integer: Integer with minus is integer');
select ok(analysiscleaning.match_integer('+4') = TRUE, 'Test 39 match_integer: Integer with plus is integer');

--IS_INTEGER
select ok(analysiscleaning.is_integer('4.5 10g/l') = FALSE, 'Test 40 is_integer: Float with unit is not iteger');
select ok(analysiscleaning.is_integer('4 10g/l') = TRUE, 'Test 41 is_integer: Integer with unit seperately is integer');
select ok(analysiscleaning.is_integer('410g/l') = FALSE, 'Test 42 is_integer: Integer and unit together are not integer');
-- if strict = FALSE, then the last one would be also considered integer

--MATCH_TEXT
select ok(analysiscleaning.match_text('abc') = TRUE, 'Test 43 match_text: Is text'); -- true
select ok(analysiscleaning.match_text('4') = FALSE, 'Test 44 match_text: Is not text'); -- false
select ok(analysiscleaning.match_text('4a') = FALSE, 'Test 45 match_text: Number and text is not text 1'); -- false
select ok(analysiscleaning.match_text('a4')= FALSE, 'Test 46 match_text: Number and text is not text 2'); -- false
select ok(analysiscleaning.match_text('10g/l') = FALSE, 'Test 47 match_text: Unit is not text'); -- false

--IS_TEXT
select ok(analysiscleaning.is_text('aaa') = TRUE, 'Test 48 is_text: Is text'); -- true
select ok(analysiscleaning.is_text('aaa 10g/l') = TRUE, 'Test 49 is_text: Text with unit is text');
select ok(analysiscleaning.is_text('a4a 10g/l') = FALSE, 'Test 50 is_text: Number+text combination and unit is not text');

--MATCH_NUM_AND_PAR
select is(analysiscleaning.match_num_and_par('4.0(4.0)'), '4.0', 'Test 51 match_num_and_par: Number is float and in parentheses is float');
select is(analysiscleaning.match_num_and_par('4(4.0)'), '4.0', 'Test 52 match_num_and_par: Number is integer and in parentheses is float');
select is(analysiscleaning.match_num_and_par('4.0(4)'), '4.0', 'Test 53 match_num_and_par: Number is float and in parentheses is integer');
select is(analysiscleaning.match_num_and_par('4(4)'), '4', 'Test 54 match_num_and_par: Number is integer and in parentheses is integer');
-- TODO false should be boolean
select is(analysiscleaning.match_num_and_par('4(5)'), 'false', 'Test 55 match_num_and_par: Number in parentheses is different');

--is_num_and_par
select ok(analysiscleaning.is_num_and_par('.1(.1)') = TRUE, 'Test 56 is_num_and_par: number and same number in parentheses');
select ok(analysiscleaning.is_num_and_par('1.(1.)') = TRUE, 'Test 57 is_num_and_par: number and same number in parentheses');
select ok(analysiscleaning.is_num_and_par('9.9(9.9)' ) = TRUE, 'Test 58 is_num_and_par: number and same number in parentheses');
select ok(analysiscleaning.is_num_and_par('1(2)') = FALSE, 'Test 59 is_num_and_par: number and different number in parentheses');
select ok(analysiscleaning.is_num_and_par('a(a)') = FALSE, 'Test 60 is_num_and_par: text and same text in parentheses');
select ok(analysiscleaning.is_num_and_par('1') = FALSE, 'Test 61 is_num_and_par: number without parentheses');
select ok(analysiscleaning.is_num_and_par('(1)') = FALSE, 'Test 62 is_num_and_par: number only in parentheses');

--match_ratio
select is(analysiscleaning.match_ratio('3:4'), '3/4', 'Test 63 match_ratio: ratio with colon');
select is(analysiscleaning.match_ratio('3:4 10g/l'), '3/4', 'Test 64 match_ratio: ratio with colon and unit');
select is(analysiscleaning.match_ratio('3/4'), '3/4', 'Test 65 match_ratio: ratio with slash');
select is(analysiscleaning.match_ratio('3.5/4.5'), NULL, 'Test 66 match_ratio: ratio with float and slash');
select is(analysiscleaning.match_ratio('123'), NULL, 'Test 67 match_ratio: just integer');

--is_ratio
select ok(analysiscleaning.is_ratio('3:4g/L') = TRUE, 'Test 68 is_ratio: ratio with unit'); -- true
select ok(analysiscleaning.is_ratio('3/4g/L') = TRUE, 'Test 69 is_ratio: ratio with unit'); -- true
select ok(analysiscleaning.is_ratio('3.4g/L') = FALSE, 'Test 70 is_ratio: float with unit'); -- false

--clean_range
select is(analysiscleaning.clean_range('3', '<='), '(-Inf;3]', 'Test 71 clean_range: integer is less or equal'); --(-Inf;3]
select is(analysiscleaning.clean_range('3', '<'), '(-Inf;3)', 'Test 72 clean_range: integer is less than'); -- (-Inf;3)
select is(analysiscleaning.clean_range('3', '>='),'[3;Inf)', 'Test 73 clean_range: integer is greater or equal'); -- [3;Inf)
select is(analysiscleaning.clean_range('3', '>'), '(3;Inf)', 'Test 74 clean_range: integer is greater than'); -- (3;Inf)

--match_greater_less
select is(analysiscleaning.match_greater_less('<3.9'), '(-Inf;3.9)', 'Test 75 match_greater_less: has less than sign'); -- true (-Inf;3.9)
select is(analysiscleaning.match_greater_less('<=3.9'),'(-Inf;3.9]', 'Test 76 match_greater_less: has less or equal sign');  -- true (-Inf;3.9]
select is(analysiscleaning.match_greater_less('>3.9'), '(3.9;Inf)', 'Test 77 match_greater_less: has greater or equal sign');  -- true (3.9;Inf)
select is(analysiscleaning.match_greater_less('>=3.9'), '[3.9;Inf)', 'Test 78 match_greater_less: has greaterh than sign');  -- true [3.9;Inf)
select is(analysiscleaning.match_greater_less('>=3.9a'), NULL, 'Test 79 match_greater_less: number is text');  -- false
select is(analysiscleaning.match_greater_less('3.9'), NULL, 'Test 80 match_greater_less: only number, no sign');  -- false
select is(analysiscleaning.match_greater_less('>='), NULL, 'Test 81 match_greater_less: only sign, no number');  -- false

--match_between
select is(analysiscleaning.match_between('2-4'), '[2,4]', 'Test 82 match_between: range between 2 and 4'); --true
select is(analysiscleaning.match_between('-2-4'), '[-2,4]', 'Test 83 match_between: range between -2 and 4'); -- true
select is(analysiscleaning.match_between('-2--4'), NULL, 'Test 84 match_between: range between -2 and -4'); --false
select is(analysiscleaning.match_between('2--4'), NULL, 'Test 85 match_between: range between 2 and -4'); --false
select is(analysiscleaning.match_between('24'), NULL, 'Test 86 match_between: not a range, just integer'); --false

select is(analysiscleaning.match_between('2.1-4.1'), '[2.1,4.1]', 'Test 87 match_between: range between 2.1 and 4.1');  --true
select is(analysiscleaning.match_between('-2.1-4.1'), '[-2.1,4.1]', 'Test 88 match_between: range between -2.1 and 4.1');  -- true
select is(analysiscleaning.match_between('-2.1--4.1'), NULL, 'Test 89 match_between: range between -2.1 and -4.1'); --false
select is(analysiscleaning.match_between('2.1--4.1'), NULL, 'Test 90 match_between: range between 2.1 and -4.1'); --false

select is(analysiscleaning.match_between(' 2 - 4 '), '[2,4]', 'Test 91 match_between: range with whitespaces');  --true
select is(analysiscleaning.match_between(' - 2 - 4 '), '[-2,4]', 'Test 92 match_between: range with whitespaces');  -- true
select is(analysiscleaning.match_between('- 2 - - 4 '), NULL, 'Test 93 match_between: range with whitespaces'); --false
select is(analysiscleaning.match_between(' 2 - - 4'), NULL, 'Test 94 match_between: range with whitespaces'); --false

--match_range
select is(analysiscleaning.match_range('<3.9'), '(-Inf;3.9)', 'Test 95 match_range: range less than');
select is(analysiscleaning.match_range('-2-4'), '[-2,4]', 'Test 96 match_range: range between -2 and 4 ');
select is(analysiscleaning.match_range('24'), NULL, 'Test 97 match_range: not range, just integer');

--is_range
select ok(analysiscleaning.is_range('9.8 10g/l-19.8 10g/l') = TRUE, 'Test 98 is_range: range with units is range');

-- Finish the tests and clean up.
SELECT * FROM finish();
ROLLBACK;

