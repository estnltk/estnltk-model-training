-----------------------------------------------------------------------------------
--PG TAP
-----------------------------------------------------------------------------------
-- Testing function clean_values(value_raw, parameter_unit_raw)
-----------------------------------------------------------------------------------

SET search_path TO :schemaname, util;
SHOW search_path;

\echo 'Testing clean value functions'

BEGIN;
SELECT * FROM no_plan();

-----------------------------------------------------------------------------------
-- parameter_unit_raw exists, no suffix(unit) under value_raw
select is(clean_values('3', 'fL'), '{3,fL}', 'Test 1.1 integer');
select is(clean_values('3,0', 'fL'), '{3.0,fL}', 'Test 1.2 float');
select is(clean_values('3:4', 'fL'), '{3/4,fL}', 'Test 1.3 ratio');
select is(clean_values('<3', 'fL'), '{(-Inf;3),fL}', 'Test 1.4 range greater less');
select is(clean_values('<=3', 'fL'), '{(-Inf;3],fL}', 'Test 1.5 range greater less 2');
select is(clean_values('3-4', 'fL'), '{"[3,4]",fL}', 'Test 1.6 range between');
select is(clean_values('3..4', 'fL'), '{"[3,4]",fL}', 'Test 1.7 range with dots');
select is(clean_values('3(3)', 'fL'), '{3,fL}', 'Test 1.8 number and parentheses');
select is(clean_values('3.4(3.4)', 'fL'), '{3.4,fL}', 'Test 1.9 number and parentheses');

-----------------------------------------------------------------------------------
-- parameter_unit_raw doesn't exist, no suffix(unit) under value_raw

select is(clean_values('3', NULL), '{3,NULL}', 'Test 2.1 integer');
select is(clean_values('3,0', NULL), '{3.0,NULL}', 'Test 2.2 float');
select is(clean_values('3:4', NULL), '{3/4,NULL}', 'Test 2.3 ratio');
select is(clean_values('<3', NULL), '{(-Inf;3),NULL}', 'Test 2.4 range greater less');
select is(clean_values('<=3', NULL), '{(-Inf;3],NULL}', 'Test 2.5 range greater less 2');
select is(clean_values('3-4', NULL), '{"[3,4]",NULL}', 'Test 2.6 range between');
select is(clean_values('3..4', NULL), '{"[3,4]",NULL}', 'Test 2.7 range with dots');
select is(clean_values('3(3)', NULL), '{3,NULL}', 'Test 2.8 number and parentheses');
select is(clean_values('3.4(3.4)', NULL), '{3.4,NULL}', 'Test 2.9 number and parentheses');


-----------------------------------------------------------------------------------
-- parameter_unit_raw exists, suffix(unit) under value_raw

select is(clean_values('3kg', 'fL'), '{3,fL}', 'Test 3.1 integer');
select is(clean_values('3,0kg', 'fL'), '{3.0,fL}', 'Test 3.2 float');
select is(clean_values('3:4kg', 'fL'), '{3/4,fL}', 'Test 3.3 ratio');
select is(clean_values('<3kg', 'fL'), '{(-Inf;3),fL}', 'Test 3.4 range greater less');
select is(clean_values('<=3kg', 'fL'), '{(-Inf;3],fL}', 'Test 3.5 range greater less 2');
select is(clean_values('3-4kg', 'fL'), '{"[3,4]",fL}', 'Test 3.6 range between');
select is(clean_values('3..4kg', 'fL'), '{"[3,4]",fL}', 'Test 3.7 range with dots');
select is(clean_values('3(3)kg', 'fL'), '{3,fL}', 'Test 3.8 number and parentheses');
select is(clean_values('3.4(3.4)kg', 'fL'), '{3.4,fL}', 'Test 3.9 number and parentheses');

-----------------------------------------------------------------------------------
-- parameter_unit_raw doesn't exist, suffix(unit) under value_raw

select is(clean_values('3 fL', NULL), '{3,fL}', 'Test 4.1 integer');
select is(clean_values('3,0 fL', NULL), '{3.0,fL}', 'Test 4.2 float');
select is(clean_values('3:4 fL', NULL), '{3/4,fL}', 'Test 4.3 ratio');
select is(clean_values('<3 fL', NULL), '{(-Inf;3),fL}', 'Test 4.4 range greater less');
select is(clean_values('<=3 fL', NULL), '{(-Inf;3],fL}', 'Test 4.5 range greater less 2');
select is(clean_values('3-4 fL', NULL), '{"[3,4]",fL}', 'Test 4.6 range between');
select is(clean_values('3..4 fL', NULL), '{"[3,4]",fL}', 'Test 4.7 range with dots');
select is(clean_values('3(3) fL', NULL), '{3,fL}', 'Test 4.8 number and parentheses');
select is(clean_values('3.4(3.4) fL', NULL), '{3.4,fL}', 'Test 4.9 number and parentheses');


-----------------------------------------------------------------------------------
-- same as previous, just without a whitespace

select is(clean_values('3fL', NULL), '{3,fL}', 'Test 5.1 integer');
select is(clean_values('3,0fL', NULL), '{3.0,fL}', 'Test 5.2 float');
select is(clean_values('3:4fL', NULL), '{3/4,fL}', 'Test 5.3 ratio');
select is(clean_values('<3fL', NULL), '{(-Inf;3),fL}', 'Test 5.4 range greater less');
select is(clean_values('<=3fL', NULL), '{(-Inf;3],fL}', 'Test 5.5 range greater less 2');
select is(clean_values('3-4fL', NULL), '{"[3,4]",fL}', 'Test 5.6 range between');
select is(clean_values('3..4fL', NULL), '{"[3,4]",fL}', 'Test 5.7 range with dots');
select is(clean_values('3(3)fL', NULL), '{3,fL}', 'Test 5.8 number and parentheses');
select is(clean_values('3.4(3.4)fL', NULL), '{3.4,fL}', 'Test 5.9 number and parentheses');

-- Finish the tests and clean up.
SELECT * FROM finish();
ROLLBACK;

